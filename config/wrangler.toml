# wrangler.toml - Cloudflare Worker Configuration

name = "tft-tournament-tracker"
main = "src/workers/main_worker.js"
compatibility_date = "2024-01-01"
account_id = "your_cloudflare_account_id_here"

# Worker configuration
[build]
command = ""
cwd = ""
watch_dir = "src"

# KV Namespaces for encrypted API key storage
[[kv_namespaces]]
binding = "API_KEYS"
id = "your_production_kv_namespace_id_here"
preview_id = "your_preview_kv_namespace_id_here"

# Additional KV namespace for tournament data
[[kv_namespaces]]
binding = "TOURNAMENT_DATA"
id = "your_tournament_kv_namespace_id_here"
preview_id = "your_tournament_preview_kv_id_here"

# Development environment
[env.development]
name = "tft-tournament-tracker-dev"
kv_namespaces = [
    { binding = "API_KEYS", id = "dev_api_keys_namespace_id", preview_id = "dev_api_keys_preview_id" },
    { binding = "TOURNAMENT_DATA", id = "dev_tournament_namespace_id", preview_id = "dev_tournament_preview_id" }
]

[env.development.vars]
ENVIRONMENT = "development"
DEBUG_MODE = "true"
CORS_ORIGIN = "*"

# Staging environment
[env.staging]
name = "tft-tournament-tracker-staging"
kv_namespaces = [
    { binding = "API_KEYS", id = "staging_api_keys_namespace_id", preview_id = "staging_api_keys_preview_id" },
    { binding = "TOURNAMENT_DATA", id = "staging_tournament_namespace_id", preview_id = "staging_tournament_preview_id" }
]

[env.staging.vars]
ENVIRONMENT = "staging"
DEBUG_MODE = "false"
CORS_ORIGIN = "https://staging.tft-tournament.your-domain.com"

# Production environment
[env.production]
name = "tft-tournament-tracker-prod"
kv_namespaces = [
    { binding = "API_KEYS", id = "prod_api_keys_namespace_id", preview_id = "prod_api_keys_preview_id" },
    { binding = "TOURNAMENT_DATA", id = "prod_tournament_namespace_id", preview_id = "prod_tournament_preview_id" }
]

[env.production.vars]
ENVIRONMENT = "production"
DEBUG_MODE = "false"
CORS_ORIGIN = "https://tft-tournament.your-domain.com"

# Custom domain routing
[[routes]]
pattern = "tft-tournament.your-domain.com/*"
zone_name = "your-domain.com"

[[env.staging.routes]]
pattern = "staging.tft-tournament.your-domain.com/*"
zone_name = "your-domain.com"

# Static assets configuration
[site]
bucket = "./static_assets"
entry-point = "src/admin"
include = ["**/*.html", "**/*.css", "**/*.js", "**/*.png", "**/*.jpg", "**/*.svg"]
exclude = ["node_modules", "tests", "docs"]

# Worker limits and configuration
[limits]
cpu_ms = 50

# Analytics and observability
[observability]
enabled = true

# Compatibility flags
[compatibility_flags]
nodejs_compat = true

# Upload configuration
[upload]
format = "service-worker"
dir = "./dist"
main = "./src/workers/main_worker.js"

# Triggers configuration
[[triggers]]
crons = ["0 */6 * * *"]  # Run every 6 hours for tournament maintenance

# D1 Database configuration (for future use)
# [[d1_databases]]
# binding = "TOURNAMENT_DB"
# database_name = "tft_tournament_database"
# database_id = "your_d1_database_id_here"

# R2 Storage configuration (for future file uploads)
# [[r2_buckets]]
# binding = "TOURNAMENT_ASSETS"
# bucket_name = "tft-tournament-assets"

# Queue configuration (for future background processing)
# [[queues]]
# binding = "MATCH_PROCESSING_QUEUE"
# queue_name = "match-processing"

# Durable Objects (for future real-time features)
# [[durable_objects.bindings]]
# name = "TOURNAMENT_ROOM"
# class_name = "TournamentRoom"
# script_name = "tft-tournament-tracker"

# Environment variables that will be set via wrangler secret
# These are documented here but set via: wrangler secret put VARIABLE_NAME
#
# Required secrets:
# - ADMIN_TOKEN: Strong random string for admin authentication (32+ chars)
#
# Optional secrets:
# - DISCORD_WEBHOOK_URL: For tournament notifications
# - SENTRY_DSN: For error tracking and monitoring
# - RIOT_API_FALLBACK_KEY: Backup Riot API key
# - EMAIL_API_KEY: For tournament notifications via email
# - TOURNAMENT_WEBHOOK_SECRET: For secure tournament event webhooks